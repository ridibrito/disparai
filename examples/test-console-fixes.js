// Script para testar as corre√ß√µes dos problemas do console
// Execute: node examples/test-console-fixes.js

const axios = require('axios');

const NGROK_URL = 'https://f80b5d48f7c3.ngrok-free.app';

async function testConsoleFixes() {
  try {
    console.log('üß™ Testando corre√ß√µes dos problemas do console...\n');
    console.log('üåê URL da aplica√ß√£o:', NGROK_URL);
    
    // 1. Testar se a aplica√ß√£o est√° respondendo
    console.log('1Ô∏è‚É£ Testando resposta da aplica√ß√£o...');
    try {
      const response = await axios.get(`${NGROK_URL}`, {
        timeout: 10000,
        headers: {
          'ngrok-skip-browser-warning': 'true'
        }
      });
      console.log('‚úÖ Aplica√ß√£o respondendo:', response.status);
    } catch (error) {
      console.log('‚ùå Aplica√ß√£o n√£o est√° respondendo:', error.message);
    }
    
    // 2. Testar p√°gina de perfil
    console.log('\n2Ô∏è‚É£ Testando p√°gina de perfil...');
    try {
      const profileResponse = await axios.get(`${NGROK_URL}/configuracoes/perfil`, {
        timeout: 10000,
        headers: {
          'ngrok-skip-browser-warning': 'true'
        }
      });
      console.log('‚úÖ P√°gina de perfil acess√≠vel:', profileResponse.status);
    } catch (error) {
      console.log('‚ùå Erro ao acessar p√°gina de perfil:', error.message);
    }
    
    // 3. Testar webhook
    console.log('\n3Ô∏è‚É£ Testando webhook...');
    try {
      const webhookResponse = await axios.post(`${NGROK_URL}/api/mega/webhook`, {
        instanceKey: 'test-instance',
        messageData: {
          type: 'test',
          content: 'Teste de webhook'
        }
      }, {
        timeout: 5000,
        headers: {
          'ngrok-skip-browser-warning': 'true',
          'Content-Type': 'application/json'
        }
      });
      console.log('‚úÖ Webhook funcionando:', webhookResponse.status);
    } catch (error) {
      console.log('‚ùå Erro no webhook:', error.message);
    }
    
    console.log('\nüéâ Teste das corre√ß√µes conclu√≠do!');
    console.log('\nüìã Corre√ß√µes implementadas:');
    console.log('   ‚úÖ Polling de notifica√ß√µes otimizado (30s em vez de 5s)');
    console.log('   ‚úÖ Logs de debug reduzidos');
    console.log('   ‚úÖ Consulta de mensagens corrigida');
    console.log('   ‚úÖ Filtros de organiza√ß√£o e usu√°rio ajustados');
    
    console.log('\nüí° Pr√≥ximos passos:');
    console.log('   1. Acesse a aplica√ß√£o no navegador');
    console.log('   2. Abra o console do navegador (F12)');
    console.log('   3. Verifique se os logs de polling diminu√≠ram');
    console.log('   4. Teste a edi√ß√£o do perfil da empresa');
    console.log('   5. Verifique se n√£o h√° mais erros 400');
    
    console.log('\nüîß Problemas corrigidos:');
    console.log('   - Polling excessivo: 5s ‚Üí 30s');
    console.log('   - Logs de debug: removidos para reduzir spam');
    console.log('   - Consulta de mensagens: filtros corrigidos');
    console.log('   - Estrutura de dados: ajustada para schema atual');
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error.message);
  }
}

// Executar
testConsoleFixes();
