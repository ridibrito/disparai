// Script para testar conex√£o Supabase Realtime no navegador
// Execute este c√≥digo no console do navegador (F12) na p√°gina de conversas

console.log('üß™ Testando conex√£o Supabase Realtime...');

// Verificar se o Supabase est√° dispon√≠vel
if (typeof window !== 'undefined' && window.supabase) {
  console.log('‚úÖ Supabase dispon√≠vel no window');
} else {
  console.log('‚ùå Supabase n√£o encontrado no window');
}

// Verificar se h√° dados de autentica√ß√£o
if (typeof window !== 'undefined' && window.localStorage) {
  const authData = localStorage.getItem('sb-disparai-auth-token');
  if (authData) {
    console.log('‚úÖ Token de autentica√ß√£o encontrado');
    try {
      const parsed = JSON.parse(authData);
      console.log('üìã Dados do usu√°rio:', parsed);
    } catch (e) {
      console.log('‚ùå Erro ao parsear token:', e);
    }
  } else {
    console.log('‚ùå Token de autentica√ß√£o n√£o encontrado');
  }
}

// Verificar se h√° erros no console
console.log('üîç Verifique se h√° erros no console acima');
console.log('üìã Se n√£o h√° logs de subscription, verifique:');
console.log('1. Se o usu√°rio est√° logado');
console.log('2. Se h√° erros no console');
console.log('3. Se o Supabase est√° configurado corretamente');
console.log('4. Se o Realtime est√° habilitado no Supabase');

// Testar notifica√ß√£o manual
console.log('üîî Testando notifica√ß√£o manual...');
if ('Notification' in window && Notification.permission === 'granted') {
  const notification = new Notification('Teste Manual', {
    body: 'Esta √© uma notifica√ß√£o de teste manual!',
    icon: '/icone.png'
  });
  
  notification.onclick = () => {
    console.log('‚úÖ Notifica√ß√£o manual clicada!');
    notification.close();
  };
  
  setTimeout(() => {
    notification.close();
  }, 3000);
} else {
  console.log('‚ùå Notifica√ß√µes n√£o dispon√≠veis ou permiss√£o negada');
}
