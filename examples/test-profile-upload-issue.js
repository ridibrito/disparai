// Script para testar problemas de upload no perfil
// Execute: node examples/test-profile-upload-issue.js

const axios = require('axios');

const NGROK_URL = 'https://f80b5d48f7c3.ngrok-free.app';

async function testProfileUploadIssue() {
  try {
    console.log('üîç Testando problemas de upload no perfil...\n');
    console.log('üåê URL da aplica√ß√£o:', NGROK_URL);
    
    // 1. Testar se a aplica√ß√£o est√° respondendo
    console.log('1Ô∏è‚É£ Testando resposta da aplica√ß√£o...');
    try {
      const response = await axios.get(`${NGROK_URL}`, {
        timeout: 10000,
        headers: {
          'ngrok-skip-browser-warning': 'true'
        }
      });
      console.log('‚úÖ Aplica√ß√£o respondendo:', response.status);
    } catch (error) {
      console.log('‚ùå Aplica√ß√£o n√£o est√° respondendo:', error.message);
      return;
    }
    
    // 2. Testar p√°gina de perfil
    console.log('\n2Ô∏è‚É£ Testando p√°gina de perfil...');
    try {
      const profileResponse = await axios.get(`${NGROK_URL}/configuracoes/perfil`, {
        timeout: 10000,
        headers: {
          'ngrok-skip-browser-warning': 'true'
        }
      });
      console.log('‚úÖ P√°gina de perfil acess√≠vel:', profileResponse.status);
    } catch (error) {
      console.log('‚ùå Erro ao acessar p√°gina de perfil:', error.message);
    }
    
    console.log('\nüéâ Logs adicionados para debug de upload:');
    console.log('   ‚úÖ Logs detalhados do arquivo (nome, tamanho, tipo)');
    console.log('   ‚úÖ Log antes de iniciar upload');
    console.log('   ‚úÖ Log ap√≥s concluir upload');
    console.log('   ‚úÖ Timeout de 15 segundos para upload do logo');
    console.log('   ‚úÖ Logs de verifica√ß√£o de mudan√ßas');
    
    console.log('\nüîç Logs esperados no console:');
    console.log('   üì§ Fazendo upload do logo da empresa: [caminho]');
    console.log('   üì§ Arquivo: {name: "...", size: ..., type: "..."}');
    console.log('   ‚è≥ Aguardando upload do logo...');
    console.log('   ‚úÖ Upload do logo conclu√≠do, verificando erro...');
    console.log('   ‚úÖ Logo da empresa enviado com sucesso: [URL]');
    console.log('   üîç Verifica√ß√£o de mudan√ßas: {...}');
    console.log('   ‚úÖ H√° mudan√ßas para salvar, continuando...');
    console.log('   üìù Atualizando dados do usu√°rio...');
    console.log('   üè¢ Atualizando dados da empresa...');
    
    console.log('\nüí° Teste manual:');
    console.log('   1. Acesse a aplica√ß√£o no navegador');
    console.log('   2. V√° para Configura√ß√µes > Perfil');
    console.log('   3. Abra o console do navegador (F12)');
    console.log('   4. V√° para a aba "Empresa"');
    console.log('   5. Tente fazer upload de um logo da empresa');
    console.log('   6. Observe os logs no console');
    console.log('   7. Identifique onde o processo trava:');
    console.log('      - Se trava em "‚è≥ Aguardando upload do logo..."');
    console.log('        ‚Üí Problema de conectividade ou timeout');
    console.log('      - Se trava em "‚úÖ Upload do logo conclu√≠do..."');
    console.log('        ‚Üí Problema na verifica√ß√£o de erro');
    console.log('      - Se n√£o aparece "üîç Verifica√ß√£o de mudan√ßas"');
    console.log('        ‚Üí Problema no upload em si');
    console.log('      - Se aparece "üîç Verifica√ß√£o de mudan√ßas" mas n√£o continua');
    console.log('        ‚Üí Problema na l√≥gica de verifica√ß√£o');
    
    console.log('\n‚ö†Ô∏è Poss√≠veis problemas:');
    console.log('   1. Arquivo muito grande (>5MB)');
    console.log('   2. Tipo de arquivo n√£o suportado');
    console.log('   3. Problemas de conectividade com Supabase');
    console.log('   4. Timeout de rede');
    console.log('   5. Problemas de autentica√ß√£o no storage');
    console.log('   6. Pol√≠ticas RLS bloqueando upload');
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error.message);
  }
}

// Executar
testProfileUploadIssue();
