// Script para configurar webhook com novo link ngrok
// Execute: node examples/configure-ngrok-webhook.js

const axios = require('axios');

const API_BASE = 'https://teste8.megaapi.com.br';
const TOKEN = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIwNC8wOS8yMDI1IiwibmFtZSI6IlRlc3RlIDgiLCJhZG1pbiI6dHJ1ZSwiaWF0IjoxNzU3MTAyOTU0fQ.R-h4NQDJBVnxlyInlC51rt_cW9_S3A1ZpffqHt-GWBs';
const NEW_NGROK_URL = 'https://b41819143523.ngrok-free.app';

const headers = {
  'Authorization': `Bearer ${TOKEN}`,
  'Content-Type': 'application/json'
};

async function configureNgrokWebhook() {
  try {
    console.log('üîß Configurando webhook com novo link ngrok...\n');
    console.log('üåê Novo URL ngrok:', NEW_NGROK_URL);
    
    // 1. Listar todas as inst√¢ncias
    console.log('1Ô∏è‚É£ Listando inst√¢ncias dispon√≠veis...');
    try {
      const instancesResponse = await axios.get(`${API_BASE}/rest/instance/fetchInstances`, { headers });
      console.log('‚úÖ Inst√¢ncias encontradas:', instancesResponse.data);
      
      const instances = instancesResponse.data;
      if (!instances || instances.length === 0) {
        console.log('‚ö†Ô∏è Nenhuma inst√¢ncia encontrada');
        return;
      }
      
      // 2. Configurar webhook para cada inst√¢ncia
      for (const instance of instances) {
        const instanceKey = instance.instanceName || instance.instance_key || instance.key;
        if (!instanceKey) {
          console.log('‚ö†Ô∏è Inst√¢ncia sem chave v√°lida:', instance);
          continue;
        }
        
        console.log(`\n2Ô∏è‚É£ Configurando webhook para inst√¢ncia: ${instanceKey}`);
        
        const webhookUrl = `${NEW_NGROK_URL}/api/mega/webhook`;
        
        // Verificar webhook atual
        console.log('   üìã Verificando webhook atual...');
        try {
          const currentWebhook = await axios.get(`${API_BASE}/rest/webhook/${instanceKey}`, { headers });
          console.log('   ‚úÖ Webhook atual:', JSON.stringify(currentWebhook.data, null, 2));
        } catch (error) {
          console.log('   ‚ö†Ô∏è Erro ao verificar webhook atual:', error.response?.data || error.message);
        }
        
        // Atualizar webhook
        console.log('   üîÑ Atualizando webhook...');
        try {
          const updateResponse = await axios.post(`${API_BASE}/rest/webhook/${instanceKey}`, {
            webhookUrl: webhookUrl,
            webhookEnabled: true
          }, { headers });
          console.log('   ‚úÖ Webhook atualizado:', JSON.stringify(updateResponse.data, null, 2));
        } catch (error) {
          console.log('   ‚ùå Erro ao atualizar webhook:', error.response?.data || error.message);
        }
        
        // Verificar webhook ap√≥s atualiza√ß√£o
        console.log('   üîç Verificando webhook ap√≥s atualiza√ß√£o...');
        try {
          const updatedWebhook = await axios.get(`${API_BASE}/rest/webhook/${instanceKey}`, { headers });
          console.log('   ‚úÖ Webhook ap√≥s atualiza√ß√£o:', JSON.stringify(updatedWebhook.data, null, 2));
        } catch (error) {
          console.log('   ‚ö†Ô∏è Erro ao verificar webhook atualizado:', error.response?.data || error.message);
        }
        
        // Testar webhook
        console.log('   üß™ Testando webhook...');
        try {
          const testResponse = await axios.post(webhookUrl, {
            instanceKey: instanceKey,
            type: 'test',
            data: {
              message: 'Teste de webhook com novo ngrok',
              timestamp: new Date().toISOString(),
              instance: instanceKey
            }
          }, {
            headers: {
              'Content-Type': 'application/json'
            }
          });
          console.log('   ‚úÖ Teste do webhook bem-sucedido:', testResponse.data);
        } catch (error) {
          console.log('   ‚ö†Ô∏è Erro ao testar webhook:', error.response?.data || error.message);
        }
      }
      
    } catch (error) {
      console.log('‚ùå Erro ao listar inst√¢ncias:', error.response?.data || error.message);
    }
    
    console.log('\nüéâ Processo de configura√ß√£o conclu√≠do!');
    console.log('\nüìã Resumo:');
    console.log(`   üåê Novo URL ngrok: ${NEW_NGROK_URL}`);
    console.log(`   üîó Webhook endpoint: ${NEW_NGROK_URL}/api/mega/webhook`);
    console.log('   ‚úÖ Todas as inst√¢ncias foram atualizadas');
    console.log('\nüí° Pr√≥ximos passos:');
    console.log('   1. Verifique se o ngrok est√° rodando');
    console.log('   2. Teste enviando uma mensagem do WhatsApp');
    console.log('   3. Verifique se as mensagens aparecem na aplica√ß√£o');
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error.response?.data || error.message);
  }
}

// Executar
configureNgrokWebhook();
